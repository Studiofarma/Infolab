# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: ["main" ]
  release:
      types: [ "created" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt-hotspot'
        cache: maven
    - name: Cache local Maven repository
      uses: actions/cache@v3.2.2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: Build with Maven
      run: |
        mvn clean
        mvn -B test --file pom.xml
    - name: Run Frontend Tests
      shell: bash
      run: ./start-frontend-tests.sh

  publish:
    runs-on: ubuntu-latest

    needs: build
    if: ${{ github.event_name != 'push' }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt-hotspot'
        cache: maven
    - name: Cache local Maven repository
      uses: actions/cache@v3.2.2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: Set env variables
      run: if [ "${{ github.ref_type }}" == "tag" ]; then echo "MY_VERSION=${{ github.ref_name }}"; else echo "MY_VERSION=${{ github.sha }}"; fi >> $GITHUB_ENV
    - name: Build with Maven
      env:
        CR_PAT: ${{ secrets.CR_PAT }}
      run: |
        mvn clean
        mvn versions:set -DnewVersion="${{ env.MY_VERSION }}" --file pom.xml
        mvn spring-boot:build-image -DskipTests -Dimage.publish=true --file pom.xml
